[{"C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\index.js":"1","C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\components\\GamesContainer.js":"2","C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\components\\GamesList.js":"3","C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\components\\GamesEditor.js":"4","C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\components\\GamesCreate.js":"5","C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\components\\GamesDelete.js":"6"},{"size":254,"mtime":1611836480735,"results":"7","hashOfConfig":"8"},{"size":2701,"mtime":1611922380401,"results":"9","hashOfConfig":"8"},{"size":2794,"mtime":1611921629772,"results":"10","hashOfConfig":"8"},{"size":4074,"mtime":1611866748671,"results":"11","hashOfConfig":"8"},{"size":3785,"mtime":1611866779067,"results":"12","hashOfConfig":"8"},{"size":761,"mtime":1611867187683,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"40agk3",{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\index.js",[],["28","29"],"C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\components\\GamesContainer.js",["30","31","32","33"],"C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\components\\GamesList.js",["34","35"],"C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\components\\GamesEditor.js",["36"],"import React from \"react\";\n\n\nclass GamesEditor extends React.Component {\n    constructor(props) {\n        super(props);\n    this.state = {\n        game : {},\n        favoriteChecked: true,\n        value: \"\",\n        putResponse: {}\n      }\n\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    componentDidMount() {\n        fetch('http://127.0.0.1:8000/api/games/' + this.props.gameId)\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({ game: data, favoriteChecked: data.favorite == \"0\" ? false : true })\n            })\n            .catch(console.log);\n    }\n\n\n\n\n\n\n      handleSubmit(event) {\n          alert(event.target.favorite.checked);\n        let gameHelper = { ...this.state.game };\n        gameHelper[\"name\"] =  event.target.name.value\n        gameHelper[\"year\"] =  event.target.year.value\n        gameHelper[\"favorite\"] = event.target.favorite.checked ? \"1\" : \"0\";\n        gameHelper[\"quantity\"] =  event.target.quantity.value\n        gameHelper[\"platform\"] =  event.target.platform.value\n        gameHelper[\"description\"] =  event.target.description.value\n        this.setState({game: gameHelper}, function () {\n            const requestOptions = {\n                method: 'PUT',\n                headers: { 'Content-Type': 'application/json',\n                            'Accept': 'application/json' },\n                body: JSON.stringify(this.state.game)\n            };\n\n            fetch('http://127.0.0.1:8000/api/games/' + this.props.gameId, requestOptions)\n                .then(response => response.json());\n\n            console.log(JSON.stringify( this.state.game));\n        });\n\n        event.preventDefault();\n      }\n\n\n\n\n    render() {\n        return (\n            <>\n                <div>\n                    <form onSubmit={this.handleSubmit} >\n                        <div className=\"form-group\">\n                            <label htmlFor=\"name\">Name:</label>\n                            <input type=\"text\" className=\"form-control\" id=\"name\" placeholder=\"Name of the game\" name=\"name\" defaultValue={this.state.game.name} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"year\">Year:</label>\n                            <input type=\"text\" className=\"form-control\" id=\"year\" placeholder=\"Year of release\" name=\"year\" defaultValue={this.state.game.year} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"quantity\">Quantity:</label>\n                            <input type=\"number\" className=\"form-control\" id=\"quantity\" placeholder=\"How many you own\" name=\"quantity\" defaultValue={this.state.game.quantity} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"favorite\">Favorite:</label>\n                            <input type=\"checkbox\" className=\"form-control\" id=\"favorite\" name=\"favorite\" checked={this.state.favoriteChecked} onChange={()=>{this.setState({favoriteChecked: !this.state.favoriteChecked})}} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"platform\">Platform:</label>\n                            <input type=\"text\" className=\"form-control\" id=\"platform\" placeholder=\"Platform you have the game on\" name=\"platform\" defaultValue={this.state.game.platform} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Description:</label>\n                            <input type=\"text\" className=\"form-control\" id=\"description\" placeholder=\"A description of the game\" name=\"description\" defaultValue={this.state.game.description} />\n                        </div>\n\n                        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                    </form>\n                </div>\n            </>\n        )\n    }\n\n\n\n}\nexport default GamesEditor\n","C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\components\\GamesCreate.js",[],"C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\components\\GamesDelete.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":3,"column":8,"nodeType":"43","messageId":"44","endLine":3,"endColumn":19},{"ruleId":"41","severity":1,"message":"45","line":4,"column":8,"nodeType":"43","messageId":"44","endLine":4,"endColumn":19},{"ruleId":"41","severity":1,"message":"46","line":5,"column":8,"nodeType":"43","messageId":"44","endLine":5,"endColumn":19},{"ruleId":"47","severity":1,"message":"48","line":33,"column":25,"nodeType":"49","endLine":33,"endColumn":61},{"ruleId":"47","severity":1,"message":"48","line":35,"column":37,"nodeType":"49","endLine":35,"endColumn":119},{"ruleId":"47","severity":1,"message":"48","line":36,"column":37,"nodeType":"49","endLine":36,"endColumn":118},{"ruleId":"50","severity":1,"message":"51","line":20,"column":76,"nodeType":"52","messageId":"53","endLine":20,"endColumn":78},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'GamesEditor' is defined but never used.","Identifier","unusedVar","'GamesCreate' is defined but never used.","'GamesDelete' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]