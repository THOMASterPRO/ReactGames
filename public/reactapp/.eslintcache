[{"C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\index.js":"1","C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\components\\GamesContainer.js":"2","C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\components\\GamesList.js":"3","C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\components\\GamesEditor.js":"4","C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\components\\GamesCreate.js":"5","C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\components\\GamesDelete.js":"6"},{"size":254,"mtime":1611836480735,"results":"7","hashOfConfig":"8"},{"size":2412,"mtime":1618576028925,"results":"9","hashOfConfig":"8"},{"size":3438,"mtime":1611934146954,"results":"10","hashOfConfig":"8"},{"size":4258,"mtime":1611933925365,"results":"11","hashOfConfig":"8"},{"size":3968,"mtime":1611935103321,"results":"12","hashOfConfig":"8"},{"size":1097,"mtime":1611934029415,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"40agk3",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"16"},"C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\index.js",[],["32","33"],"C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\components\\GamesContainer.js",[],"C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\components\\GamesList.js",["34","35","36"],"import React from \"react\"\r\n\r\nclass GamesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            temp: 2\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ games: nextProps.data });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\r\n                <div>\r\n                    <a onClick={() => this.props.setStateAndUpdate({ selectedview: 3 })} href=\"#\" className=\"btn btn-outline-primary btn-lg \" role=\"button\" aria-pressed=\"true\">Add a game</a>\r\n                </div>\r\n                {this.props.games.map(game => (\r\n                    <div className=\"accordion-item\" key={game.id}>\r\n                        <h2 className=\"accordion-header\" id={\"flush-heading\" + game.id}>\r\n                            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target={\"#flush-collapse\" + game.id} aria-expanded=\"false\" aria-controls={\"flush-collapse\" + game.id} >\r\n                                {game.name}\r\n                            </button>\r\n                        </h2>\r\n                        <div id={\"flush-collapse\" + game.id} className=\"accordion-collapse collapse\" aria-labelledby={\"flush-heading\" + game.id} data-bs-parent=\"#accordionFlushExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <div className=\"card\">\r\n                                    <ul className=\"list-group list-group-flush \">\r\n                                        <li className=\"list-group-item\">\r\n                                            <strong>id</strong> : {game.id}\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                            <strong>Platform</strong>: {game.platform}\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                            <strong>Year</strong>: {game.year}\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                            <strong>Quantity</strong>: {game.quantity}\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                            <strong>Favorite</strong>: {game.favorite}\r\n                                        </li>\r\n                                    </ul>\r\n                                    <div>\r\n                                        <a onClick={() => this.props.setStateAndUpdate({ selectedview: 2, selectedGame: game.id })} href=\"#\" className=\"btn btn-primary btn-lg \" role=\"button\" aria-pressed=\"true\">Edit Game</a>\r\n                                        <a onClick={() => this.props.setStateAndUpdate({ selectedview: 4, selectedGame: game.id })} href=\"#\" className=\"btn btn-danger btn-lg \" role=\"button\" aria-pressed=\"true\">Delete Game</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GamesList","C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\components\\GamesEditor.js",["37","38"],"import React from \"react\";\n\n\nclass GamesEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            game: {},\n            favoriteChecked: true,\n            value: \"\",\n            putResponse: {}\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        fetch('http://127.0.0.1:8000/api/games/' + this.props.gameId)\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({ game: data, favoriteChecked: data.favorite == \"0\" ? false : true })\n            })\n            .catch(console.log);\n    }\n\n    handleSubmit(event) {\n        let gameHelper = { ...this.state.game };\n        gameHelper[\"name\"] = event.target.name.value\n        gameHelper[\"year\"] = event.target.year.value\n        gameHelper[\"favorite\"] = event.target.favorite.checked ? \"1\" : \"0\";\n        gameHelper[\"quantity\"] = event.target.quantity.value\n        gameHelper[\"platform\"] = event.target.platform.value\n        gameHelper[\"description\"] = event.target.description.value\n        this.setState({ game: gameHelper }, function () {\n            const requestOptions = {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify(this.state.game)\n            };\n\n            fetch('http://127.0.0.1:8000/api/games/' + this.props.gameId, requestOptions)\n                .then(response => response.json());\n\n            console.log(JSON.stringify(this.state.game));\n        });\n\n        event.preventDefault();\n    }\n\n\n\n\n    render() {\n        return (\n            <>\n                <div>\n                    <form onSubmit={this.handleSubmit} >\n                        <div className=\"form-group\">\n                            <label htmlFor=\"name\">Name:</label>\n                            <input type=\"text\" className=\"form-control\" id=\"name\" placeholder=\"Name of the game\" name=\"name\" defaultValue={this.state.game.name} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"year\">Year:</label>\n                            <input type=\"text\" className=\"form-control\" id=\"year\" placeholder=\"Year of release\" name=\"year\" defaultValue={this.state.game.year} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"quantity\">Quantity:</label>\n                            <input type=\"number\" className=\"form-control\" id=\"quantity\" placeholder=\"How many you own\" name=\"quantity\" defaultValue={this.state.game.quantity} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"favorite\">Favorite:</label>\n                            <input type=\"checkbox\" className=\"form-control\" id=\"favorite\" name=\"favorite\" checked={this.state.favoriteChecked} onChange={() => { this.setState({ favoriteChecked: !this.state.favoriteChecked }) }} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"platform\">Platform:</label>\n                            <input type=\"text\" className=\"form-control\" id=\"platform\" placeholder=\"Platform you have the game on\" name=\"platform\" defaultValue={this.state.game.platform} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Description:</label>\n                            <input type=\"text\" className=\"form-control\" id=\"description\" placeholder=\"A description of the game\" name=\"description\" defaultValue={this.state.game.description} />\n                        </div>\n\n                        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                        <a onClick={() => this.props.setStateAndUpdate({ selectedview: 1 })} href=\"#\" className=\"btn btn-secondary\" role=\"button\" aria-pressed=\"true\">Back to overview</a>\n                    </form>\n                </div>\n            </>\n        )\n    }\n\n\n\n}\nexport default GamesEditor\n","C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\components\\GamesCreate.js",["39"],"import React from \"react\";\r\n\r\n\r\nclass GamesEditor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    this.state = {\r\n        game : {\r\n            \"name\": \"\",\r\n            \"year\" : \"\",\r\n            \"quantity\" : 0,\r\n            \"favorite\" :\"0\",\r\n            \"platform\" : \"\",\r\n            \"description\":\"\"\r\n        },\r\n        favoriteChecked: true,\r\n        value: \"\",\r\n        putResponse: {}\r\n      }\r\n      this.handleSubmit = this.handleSubmit.bind(this); \r\n    }  \r\n\r\n      handleSubmit(event) {\r\n        let gameHelper = { ...this.state.game };\r\n        gameHelper[\"name\"] =  event.target.name.value;\r\n        gameHelper[\"year\"] =  event.target.year.value;\r\n        gameHelper[\"favorite\"] = event.target.favorite.checked ? \"1\" : \"0\";\r\n        gameHelper[\"quantity\"] = event.target.quantity.value;\r\n        gameHelper[\"platform\"] = event.target.platform.value;\r\n        gameHelper[\"description\"] =  event.target.description.value;\r\n        this.setState({game: gameHelper}, function () {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json',\r\n                            'Accept': 'application/json'\r\n                         },\r\n                body: JSON.stringify( this.state.game)\r\n            };\r\n\r\n            fetch('http://127.0.0.1:8000/api/games', requestOptions)\r\n                .then(response => response.json());\r\n\r\n            console.log(JSON.stringify( this.state.game));\r\n        });\r\n        event.preventDefault();\r\n\r\n\r\n      }\r\n\r\n\r\n      \r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <form onSubmit={this.handleSubmit} > \r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name\">Name:</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"name\" placeholder=\"Name of the game\" name=\"name\"/>                            \r\n                        </div> \r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"year\">Year:</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"year\" placeholder=\"Year of release\" name=\"year\"/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"quantity\">Quantity:</label>\r\n                            <input type=\"number\" className=\"form-control\" id=\"quantity\" placeholder=\"How many you own\" name=\"quantity\"/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"favorite\">Favorite:</label>\r\n                            <input type=\"checkbox\" className=\"form-control\" id=\"favorite\" name=\"favorite\" onChange={()=>{this.setState({favoriteChecked: !this.state.favoriteChecked})}} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"platform\">Platform:</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"platform\" placeholder=\"Platform you have the game on\" name=\"platform\"/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"description\">Description:</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"description\" placeholder=\"A description of the game\" name=\"description\"/>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n\r\n                        <a onClick={() => this.props.setStateAndUpdate({selectedview : 1})} href=\"#\" className=\"btn btn-secondary\" role=\"button\" aria-pressed=\"true\">Back to overview</a>\r\n                    </form>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default GamesEditor",["40","41"],"C:\\xampp\\htdocs\\WebAPI\\public\\reactapp\\src\\components\\GamesDelete.js",["42"],"import React from \"react\";\r\n\r\n\r\nclass GamesEditor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            game: {}\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: \"\"\r\n        };\r\n\r\n        fetch('http://127.0.0.1:8000/api/games/' + this.props.gameId, requestOptions)\r\n            .then(response => response.json())\r\n            .catch(console.log);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"alert alert-success\" role=\"alert\">\r\n                    Record deleted\r\n                </div>\r\n                <br />\r\n                <a onClick={() => this.props.setStateAndUpdate({ selectedview: 1 })} href=\"#\" className=\"btn btn-secondary\" role=\"button\" aria-pressed=\"true\">Back to overview</a>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\nexport default GamesEditor\r\n",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":20,"column":21,"nodeType":"49","endLine":20,"endColumn":177},{"ruleId":"47","severity":1,"message":"48","line":50,"column":41,"nodeType":"49","endLine":50,"endColumn":212},{"ruleId":"47","severity":1,"message":"48","line":51,"column":41,"nodeType":"49","endLine":51,"endColumn":211},{"ruleId":"50","severity":1,"message":"51","line":21,"column":76,"nodeType":"52","messageId":"53","endLine":21,"endColumn":78},{"ruleId":"47","severity":1,"message":"48","line":87,"column":25,"nodeType":"49","endLine":87,"endColumn":167},{"ruleId":"47","severity":1,"message":"48","line":85,"column":25,"nodeType":"49","endLine":85,"endColumn":166},{"ruleId":"43","replacedBy":"54"},{"ruleId":"45","replacedBy":"55"},{"ruleId":"47","severity":1,"message":"48","line":36,"column":17,"nodeType":"49","endLine":36,"endColumn":159},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["56"],["57"],"no-global-assign","no-unsafe-negation"]